version: '3'
services:
  db:
    image: postgres:12
    restart: always
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=secret
        - POSTGRES_DB=workaround
    volumes:
    - /home/deployer/volumes/postgres/data:/var/lib/postgresql/data
    networks:
      - common
  nextcloud:
    image: nextcloud:18
    restart: always
    environment:
        - POSTGRES_DB=nextcloud 
        - POSTGRES_USER=postgres 
        - POSTGRES_PASSWORD=secret
        - POSTGRES_HOST=db
        - NEXTCLOUD_ADMIN_USER=admin
        - NEXTCLOUD_ADMIN_PASSWORD=admin
    labels:
      traefik.http.routers.nextcloudproxy.rule: Host(`cloud.mouillou.ch`)
      traefik.http.routers.nextcloudproxy.tls: true
      traefik.http.routers.nextcloudproxy.tls.certresolver: sample
      traefik.http.routers.nextcloudproxy.entrypoints: web-secure
      traefik.http.services.nextcloudservice.loadbalancer.server.port: 80
    volumes:
    - /home/deployer/volumes/nextcloud:/var/www/html
    networks:
      - common
    depends_on:
      - db
  traefik:
    image: traefik:2.1
    # The official Traefik docker image
    restart: always
#    command: --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - 80:80
      - 443:443
#      - 8080:8080 # dashboard
    networks:
      - web
      - common
    labels:
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.middlewares: redirect-to-https@docker
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/deployer/volumes/traefik:/etc/traefik
    container_name: traefik
networks:
  common:
  web:
    external: true