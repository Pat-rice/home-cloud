- hosts: homecloud
  vars_files:
    - vars/main.yml
    - vars/geerlingguy.security.yml
    - vars/geerlingguy.firewall.yml
  roles:
    # - { role: dev-sec.os-hardening }
    - { role: geerlingguy.security }
    - { role: geerlingguy.firewall }
    - { role: nickjj.docker }
    - { role: geerlingguy.ruby }
  tasks:    
  # Install packages
  - name: install htop
    apt:
      name: htop
      update_cache: yes
    become: yes
  - name: install vim
    apt:
      name: vim
      update_cache: yes
    become: yes
  - name: install tmux
    apt:
      name: tmux
      update_cache: yes
    become: yes
  - name: install rsync
    apt:
      name: rsync
      update_cache: yes
    become: yes
  - name: install s3fs
    apt:
      name: s3fs
      update_cache: yes
    become: yes
  - name: install python3-pip
    apt:
      name: python3-pip
      update_cache: yes
    become: yes
  - name: install git
    apt:
      name: git
      update_cache: yes
    become: yes
  # - cron:
  #     name: "backup postgres"
  #     minute: "0"
  #     hour: "2"
  #     job: "docker exec -it $(docker ps -a -q --filter ancestor=postgres --format={{ '{{.ID}}' }}) pg_dump -Upostgres nextcloud > /home/debian/`date +\\%d\\%m\\%y`_nextcloud.backup && cp /home/debian/`date +\\%d\\%m\\%y`_nextcloud.backup /home/debian/homecloud_storage/backups/db && rm /home/debian/`date +\\%d\\%m\\%y`_nextcloud.backup"
  # - cron:
  #     name: "backup nextcloud"
  #     minute: "30"
  #     hour: "2"
  #     job: "mkdir /home/debian/homecloud_storage/backups/nextcloud/`date +\\%d\\%m\\%y`_nextcloud && cp -rv volumes/nextcloud/config volumes/nextcloud/data volumes/nextcloud/themes homecloud_storage/backups/nextcloud/`date +\\%d\\%m\\%y`_nextcloud"
 # Configure traefik
  - name: Create acme.json if it doesn't exists
    file: 
      path: /home/deployer/acme.json
      state: touch 
      mode: '600'
  - name: copy traefik config
    copy:
      src: traefik.toml
      dest: /home/deployer/traefik.toml

  # Mount Scaleway object storage as volume
  - name: copy .passwd-s3fs
    copy:
      src: .passwd-s3fs
      dest: /home/deployer/.passwd-s3fs
      mode: '600'
  - name: Creates directory homecloud_storage
    file: path=/home/deployer/homecloud_storage state=directory
  - name: Unmount a mounted volume
    mount:
      path: /home/deployer/homecloud_storage
      state: unmounted
    become: yes
  - name: mount volume
    shell: s3fs homecloud /home/deployer/homecloud_storage -o passwd_file=/home/deployer/.passwd-s3fs,url=https://s3.fr-par.scw.cloud
    args:
      executable: /bin/bash
  #Docker
  - name: install docker
    pip:
      executable: /usr/bin/pip3
      name: docker
  - name: install docker-compose
    pip:
      executable: /usr/bin/pip3
      name: docker-compose
  - name: docker network create web
    command: docker network create web
    ignore_errors: yes
    args:
      chdir: /home/deployer
  - name: copy docker-compose file
    copy:
      src: docker-compose.yml
      dest: /home/deployer/docker-compose.yml
  - name: docker compose down
    command: docker-compose down
    ignore_errors: yes
    args:
      chdir: /home/deployer
  - name: docker compose up
    command: docker-compose up -d
    args:
      chdir: /home/deployer